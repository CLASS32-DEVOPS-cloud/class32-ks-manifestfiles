---
apiVersion: v1
kind: Namespace
metadata:
  name: demo
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
  namespace: demo
spec:
  type: NodePort
  ports:
  - port: 9000
    targetPort: 9000
    nodePort: 30093
  selector:
    app: sonarqube
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-pvc
  namespace: demo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-config
  namespace: demo
data:
  SONARQUBE_JDBC_URL: "jdbc:postgresql://postgres:5432/sonar"
---
apiVersion: v1
kind: Secret
metadata:
  name: sonarqube-secret
  namespace: demo
type: Opaque
data:
  SONARQUBE_JDBC_USERNAME: c29uYXJ1c2Vy   # sonaruser
  SONARQUBE_JDBC_PASSWORD: c29uYXJwYXNz   # sonarpass
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonarqube
  namespace: demo
spec:
  serviceName: sonarqube
  replicas: 3
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
      - name: sonarqube
        image: sonarqube:latest
        ports:
        - containerPort: 9000
        env:
        - name: SONARQUBE_JDBC_URL
          valueFrom:
            configMapKeyRef:
              name: sonarqube-config
              key: SONARQUBE_JDBC_URL
        - name: SONARQUBE_JDBC_USERNAME
          valueFrom:
            secretKeyRef:
              name: sonarqube-secret
              key: SONARQUBE_JDBC_USERNAME
        - name: SONARQUBE_JDBC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sonarqube-secret
              key: SONARQUBE_JDBC_PASSWORD
        volumeMounts:
        - name: sonarqube-data
          mountPath: /opt/sonarqube/data
      volumes:
      - name: sonarqube-data
        persistentVolumeClaim:
          claimName: sonarqube-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: demo
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: demo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_DB
          value: sonar
        - name: POSTGRES_USER
          value: sonaruser
        - name: POSTGRES_PASSWORD
          value: sonarpass
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc